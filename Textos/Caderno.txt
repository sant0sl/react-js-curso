//STATELESS
//props (sem importar 'import React from 'react';')
const EquipeProps = (props) => {
  return(
    <div id="equipeProps">
      <SobreProps nome={props.nome} cargo={props.cargo} idade={props.idade}/>
      <SocialMediaProps facebook={props.facebook} linkedin={props.linkedin} google={props.google}/>
      <hr/>
    </div>
  );
}
const SobreProps = (props) => {
  return(
    <div id='sobreProps'>
      <h3>
        - {props.nome}, {props.idade} anos - {props.cargo}
      </h3>
    </div>
  );
}
const SocialMediaProps = (props) => {
  return(
    <div id='socialMediaProps'>
      <h4>
        <a href={props.facebook}>Facebook </a>
        <a href={props.linkedin}>LinkedIn </a>
        <a href={props.google}>Google+ </a>
      </h4>
    </div>
  );
}

//class component (necessita 'import React, {Component} from 'react';')
class EquipeComponent extends Component{
  render(){
    return(
      <div id='equipeComponent'>
        <SobreComponent nome={this.props.nome} cargo={this.props.cargo} idade={this.props.idade}/>
        <SocialMediaComponent facebook={this.props.facebook} linkedin={this.props.linkedin} google={this.props.google}/>
        <hr/>
      </div>
    );
  }
}
class SobreComponent extends Component{
  render(){
    return(
      <div id='sobreComponent'>
        <h3>
          - {this.props.nome}, {this.props.idade} anos - {this.props.cargo}
        </h3>
      </div>
    );
  }
}
class SocialMediaComponent extends Component{
  render(){
    return(
      <div id='socialMediaComponent'>
        <h4>
          <a href={this.props.facebook}>Facebook </a>
          <a href={this.props.linkedin}>LinkedIn </a>
          <a href={this.props.google}>Google+ </a>
        </h4>
      </div>
    );
  }
}

/*
<h1>Conheça nossa equipe:</h1>
      <EquipeComponent nome='Leonardo' cargo='Programador' idade='23' 
      facebook='https://facebook.com' linkedin='https://linkedin.com' google='https://google.com.br'/>
*/

-------------------

//STATEFULL - CONTADOR
class App extends Component{

  constructor(props){
    super(props);
    this.state = {
      status: 'Aperte!',
      cont: 0
    };
    this.aumentar = this.aumentar.bind(this);
    this.diminuir = this.diminuir.bind(this);
  }

  aumentar(){
    let state = this.state;
    state.cont++;
    state.status = 'Aumentou';
    this.setState(state);
  }
  diminuir(){
    let state = this.state;
    state.cont--;
    state.status = 'Diminuiu';
    this.setState(state);
  }

  render(){
    return(
      <div align='center'>
        <h1>Contador: </h1>
        {this.state.status}
        <h3>
          <button onClick={this.diminuir}>-</button>
          {this.state.cont}
          <button onClick={this.aumentar}>+</button>
        </h3>
      </div>
    );
  }
}

export default App;

-----------------------------

//Ciclo de vida dos componentes (Inicialização, Montagem, Atualização, Desmontagem)
import React, {Component} from 'react';

class App extends Component{

  constructor(props){
    super(props);
    this.state = {
      hora: '00:00:00'
    };
  }

  //Fazer 1 vez algo depois do component ser montado
  componentDidMount(){
    setInterval(()=>{
      this.setState({hora: new Date().toLocaleTimeString()})
    }, 1000);
  }

  //Roda a partir de qualquer atualização de state
  componentDidUpdate(){
    console.log('Atualizou!');
  }

  //Método de retorno boolean, comparação de states ou outra coisa, para decidir se atualiza algo ou não
  shouldComponentUpdate(){

  }

  render(){
    return(
      <div align='center'>
        Olá, mundo!
        {this.state.hora}
      </div>
    );
  }
}

export default App;


-----------------------------

//Eventos
import Membro from './components/Membro';
<Membro nome='Visitante'/>

-----------------------------

//Renderização condicional
import React, {Component} from 'react';

class App extends Component{

  constructor(props){
    super(props);
    this.state = {
      status: false
    };
    this.entrar = this.entrar.bind(this);
    this.sair = this.sair.bind(this);
  }

  entrar(){
    this.setState({status: true})
  }
  sair(){
    this.setState({status: false})
  }

  render(){
    return(
      <div align='center'>
        {
          this.state.status ?
          <div>
            <h2>Logado!</h2>
            <button onClick={this.sair}>
              Sair
            </button>
          </div> :
          <div>
            <h2>Faça o login!</h2>
            <button onClick={this.entrar}>
              Entrar
            </button>
          </div>
        }
      </div>
    );
  }
}

export default App;

-----------------------------

//Listas
import React, {Component} from 'react';
import Feed from './components/Feed'

class App extends Component{

  constructor(props){
    super(props);
    this.state = {
      feed: [
        {id: 1, username: 'Leonardo', curtidas: 10, comentarios: 2},
        {id: 2, username: 'Lucas', curtidas: 120, comentarios: 24},
        {id: 3, username: 'Amanda', curtidas: 30, comentarios: 12},
        {id: 4, username: 'Julio', curtidas: 1, comentarios: 1}
      ]
    };
  }

  render(){
    return(
      <div align='center'>
        {
          this.state.feed.map((item) => {
            return(
              <Feed id={item.id} username={item.username} curtidas={item.curtidas} comentarios={item.comentarios}/>
            );
          })
        }
      </div>
    );
  }
}

export default App;

-----------------------------

//Captura de inputs e manipulação de formulário
import React, {Component} from 'react';

class App extends Component{

  constructor(props){
    super(props);
    this.state = {
      email: '',
      senha: '', 
      sexo: ''
    };

    this.getEmail = this.getEmail.bind(this);
    this.getSenha = this.getSenha.bind(this);
    this.getSexo = this.getSexo.bind(this);
  }

  getEmail(e){
    this.setState({email: e.target.value});
  }
  getSenha(e){
    this.setState({senha: e.target.value});
  }
  getSexo(e){
    this.setState({sexo: e.target.value});
  }

  render(){
    return(
      <div align='center'>
        <h2>Login</h2>

        Email:
        <input type="email" name="email" value={this.state.email} placeholder='Insira seu e-mail'
        onChange={this.getEmail}/>

        Senha:
        <input type="password" name="senha" value={this.state.senha} placeholder='Insira sua senha'
        onChange={this.getSenha}/>

        Sexo:
        <select name='sexo' value={this.state.sexo} 
        onChange={this.getSexo}>
          <option value=''></option>
          <option value='Masculino'>Masculino</option>
          <option value='Feminino'>Feminino</option>
        </select>

        <br/>

        <h4>Email: {this.state.email}</h4>
        <h4>Senha: {this.state.senha}</h4>
        <h4>Sexo: {this.state.sexo}</h4>
      </div>
    );
  }
}

export default App;

-----------------------------

//Praticando formulários

import React, {Component} from 'react';

class App extends Component{

  constructor(props){
    super(props);
    this.state = {
      nome: '',
      email: '',
      senha: '',
      error: ''
    };

    this.cadastrar = this.cadastrar.bind(this);
  }

  cadastrar(event){
    event.preventDefault();
    const {nome, email, senha} = this.state;

    if(nome !== '' && email !== '' && senha !== ''){
      this.setState({error: ''});
      alert(`Nome: ${nome} \nEmail: ${email} \nSenha: ${senha}`);      
    }
    else{
      this.setState({error: 'Campos precisam ser preenchidos'});
    }
  }

  render(){
    return(
      <div align='center'>

        <h1>Novo usuario</h1>
        {this.state.error && <p>{this.state.error}</p>}
        <form onSubmit={this.cadastrar}>
          <input type="text" placeholder='Nome' value={this.state.nome} onChange={(e) => this.setState({nome: e.target.value})}/>
          <br/>
          <input type="email" placeholder='Email' value={this.state.email} onChange={(e) => this.setState({email: e.target.value})}/>
          <br/>
          <input type="password" placeholder='Senha' value={this.state.senha} onChange={(e) => this.setState({senha: e.target.value})}/>
          <br/>
          <button type='submit'>Cadastrar</button>
        </form>

      </div>
    );
  }
}

export default App;

-----------------------------

//formulário
import React, {Component} from 'react';

class App extends Component{

  constructor(props){
    super(props);
    this.state = {
      form: {
        nome: '',
        email: '',
        senha: '', 
        sexo: ''
      }
    };

    this.dadosForm = this.dadosForm.bind(this);
  }

  dadosForm(e){
    let form = this.state.form;
    form[e.target.name] = e.target.value;
    this.setState({form: form});
  }

  render(){
    return(
      <div align='center'>
        <h2>Login</h2>

        Nome:
        <input type="text" name="nome" value={this.state.form.nome} placeholder='Insira seu nome'
        onChange={this.dadosForm}/>
        
        Email:
        <input type="email" name="email" value={this.state.form.email} placeholder='Insira seu e-mail'
        onChange={this.dadosForm}/>

        Senha:
        <input type="password" name="senha" value={this.state.form.senha} placeholder='Insira sua senha'
        onChange={this.dadosForm}/>

        Sexo:
        <select name='sexo' value={this.state.form.sexo} 
        onChange={this.dadosForm}>
          <option value=''></option>
          <option value='Masculino'>Masculino</option>
          <option value='Feminino'>Feminino</option>
        </select>

        <br/>
        
        <h4>Nome: {this.state.form.nome}</h4>
        <h4>Email: {this.state.form.email}</h4>
        <h4>Senha: {this.state.form.senha}</h4>
        <h4>Sexo: {this.state.form.sexo}</h4>
      </div>
    );
  }
}

export default App;

-----------------------------

//Projeto Biscoito da Sorte
import React, {Component} from 'react';
import './estilo.css'

class App extends Component{

  constructor(props){
    super(props);
    this.state = {
      frase: ''
    };

    this.frases = ['Siga os bons e aprenda com eles.', 'O bom-senso vale mais do que muito conhecimento.', 
    'O riso é a menor distância entre duas pessoas.', 
    'Deixe de lado as preocupações e seja feliz.',
    'Realize o óbvio, pense no improvável e conquiste o impossível.',
    'Acredite em milagres, mas não dependa deles.',
    'A maior barreira para o sucesso é o medo do fracasso.'];

    this.quebraBiscoito = this.quebraBiscoito.bind(this);
    this.fechaBiscoito = this.fechaBiscoito.bind(this);
  }

  quebraBiscoito(){
    let state =this.state;
    let numAleatorio = Math.floor(Math.random() * this.frases.length);
    state.frase = '" ' + this.frases[numAleatorio] + ' "';
    this.setState(state);
  }

  fechaBiscoito(){
    let state =this.state;
    state.frase = '';
    this.setState(state);
  }

  render(){
    return(
      <div className='container' align='center'>
        <img src={require('./assets/biscoito.png')} className='imgBiscoito'/>
        <br/>
        <Botao nome='Abrir biscoito' acaoBtn={this.quebraBiscoito}/>
        <Botao nome='Fechar biscoito' acaoBtn={this.fechaBiscoito}/>
        <h3 className='textoFrase'>{this.state.frase}</h3>
      </div>
    );
  }
}

class Botao extends Component{
  render(){
    return(
      <div>
        <button onClick={this.props.acaoBtn}>{this.props.nome}</button>
      </div>
    );
  }
}

export default App;

-----------------------------

//Projeto Cronometro
import React, {Component} from 'react';
import './style.css'

class App extends Component{

  constructor(props){
    super(props);
    this.state = {
      tempo: 0,
      botao1: 'Go!',
      botao2: 'Clear'
    };
    this.timer = null;
    this.start = this.start.bind(this);
    this.clear = this.clear.bind(this);
  }

  start(){
    let state = this.state;
    if(this.timer !== null){
      clearInterval(this.timer);
      this.timer = null;
      state.botao1 = 'Go!';
    }
    else{
      this.timer = setInterval(()=>{
        state.tempo += 0.1;
        this.setState(state);
      }, 100);
      state.botao1 = 'Pause';
    }
    this.setState(state);
  }

  clear(){
    let state = this.state;
    clearInterval(this.timer);
    this.timer = null;
    state.tempo = 0;
    state.botao1 = 'Go!';
    this.setState(state);
  }

  render(){
    return(
      <div className="container" align='center'>
        <img src={require('./assets/cronometro.png')} className="img"/>
        <a className="timer">{this.state.tempo.toFixed(1)}</a>
        <div className="areaBtn">
          <a className="botao" onClick={this.start}>{this.state.botao1}</a>
          <a className="botao" onClick={this.clear}>{this.state.botao2}</a>
        </div>
      </div>
    );
  }
}

export default App;

-----------------------------

//Primeira aula Hooks - Api useState
import React, {useState} from 'react';

function App(){

  const [tarefas, setTarefas] = useState([
    'Pagar netfuturo',
    'Estudar udemy'
  ]);

  const [input, setInput] = useState('');

  function handleAdd(){
    setTarefas([...tarefas, input]);
    setInput('')
  }

  return(
    <div align='center'>
      <ul>
        {tarefas.map(tarefa => (
          <li key={tarefa}>{tarefa}</li>
        ))}
      </ul>
      <br/>
      
      <input type='text' placeholder='Insira algo para a lista' value={input} onChange={e => setInput(e.target.value)}/>
      <button type='button' onClick={handleAdd}>Adicionar</button>

    </div>
  );
}

export default App;

-----------------------------

//Hooks - useEffect
import React, {useEffect, useState} from 'react';

function App(){

  const [tarefas, setTarefas] = useState([
    'Pagar netfuturo',
    'Estudar udemy'
  ]);

  const [input, setInput] = useState('');

  //Busca lista em storage (componentDidMount)
  useEffect(() => {
    const tarefasStorage = localStorage.getItem('tarefas');
    if(tarefasStorage){
      setTarefas(JSON.parse(tarefasStorage));
    }
  }, []);
  
  //Salva lista em storage (componentDidUpdate)
  useEffect(() => {
    localStorage.setItem('tarefas', JSON.stringify(tarefas));
  }, [tarefas]);

  function handleAdd(){
    setTarefas([...tarefas, input]);
    setInput('');
  }

  return(
    <div align='center'>
      <ul>
        {tarefas.map(tarefa => (
          <li key={tarefa}>{tarefa}</li>
        ))}
      </ul>
      <br/>
      
      <input type='text' placeholder='Insira algo para a lista' value={input} onChange={e => setInput(e.target.value)}/>
      <button type='button' onClick={handleAdd}>Adicionar</button>

    </div>
  );
}

export default App;

-----------------------------

//Hooks - useMemo
import React, {useEffect, useState, useMemo} from 'react';

function App(){

  const [tarefas, setTarefas] = useState([
    'Pagar netfuturo',
    'Estudar udemy'
  ]);

  const [input, setInput] = useState('');

  function handleAdd(){
    setTarefas([...tarefas, input]);
    setInput('');
  }

  //Verifica diretamente da lista, a quantidade que existe
  const totalTarefas = useMemo(()=> tarefas.length, [tarefas]);

  //Busca lista em storage (componentDidMount)
  useEffect(() => {
    const tarefasStorage = localStorage.getItem('tarefas');
    if(tarefasStorage){
      setTarefas(JSON.parse(tarefasStorage));
    }
  }, []);
  
  //Salva lista em storage (componentDidUpdate)
  useEffect(() => {
    localStorage.setItem('tarefas', JSON.stringify(tarefas));
  }, [tarefas]);

  return(
    <div align='center'>
      <ul>
        {tarefas.map(tarefa => (
          <li key={tarefa}>{tarefa}</li>
        ))}
      </ul>
      <br/>
      <strong>Voce possui: {totalTarefas} tarefas</strong>
      <br/>
      <input type='text' placeholder='Insira algo para a lista' value={input} onChange={e => setInput(e.target.value)}/>
      <button type='button' onClick={handleAdd}>Adicionar</button>

    </div>
  );
}

export default App;

-----------------------------

//Hooks - useCallback
import React, {useEffect, useState, useMemo, useCallback} from 'react';

function App(){

  const [tarefas, setTarefas] = useState([
    'Pagar netfuturo',
    'Estudar udemy'
  ]);

  const [input, setInput] = useState('');

  /*function handleAdd(){
    setTarefas([...tarefas, input]);
    setInput('');
  };*/
  //Função que substitui a handleAdd, economizando processamento
  const handleAdd = useCallback(() =>{
    setTarefas([...tarefas, input]);
    setInput('');
  }, [input, tarefas]);

  //Verifica diretamente da lista, a quantidade que existe
  const totalTarefas = useMemo(()=> tarefas.length, [tarefas]);

  //Busca lista em storage (componentDidMount)
  useEffect(() => {
    const tarefasStorage = localStorage.getItem('tarefas');
    if(tarefasStorage){
      setTarefas(JSON.parse(tarefasStorage));
    }
  }, []);
  
  //Salva lista em storage (componentDidUpdate)
  useEffect(() => {
    localStorage.setItem('tarefas', JSON.stringify(tarefas));
  }, [tarefas]);

  return(
    <div align='center'>
      <ul>
        {tarefas.map(tarefa => (
          <li key={tarefa}>{tarefa}</li>
        ))}
      </ul>
      <br/>
      <strong>Voce possui: {totalTarefas} tarefas</strong>
      <br/>
      <input type='text' placeholder='Insira algo para a lista' value={input} onChange={e => setInput(e.target.value)}/>
      <button type='button' onClick={handleAdd}>Adicionar</button>

    </div>
  );
}

export default App;

-----------------------------

//React Avançado - Requisições http
